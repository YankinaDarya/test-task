{"ast":null,"code":"var _jsxFileName = \"/home/daria/table/test-task/src/components/Table/Table.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { directSort, reversedSort } from '../../actions/actions';\nimport Row from './Row/Row';\nimport TableHeader from './TableHeader/TableHeader';\n\nconst Table = props => {\n  function changes() {\n    const keySorted = props.match.params.keySorted;\n    const sortType = props.match.params.sortType;\n\n    if (keySorted !== undefined) {\n      if (sortType === 'direct') {\n        props.directSort(keySorted);\n      } else if (sortType === 'reversed') {\n        props.reversedSort(keySorted);\n      }\n    }\n  }\n\n  useEffect(() => {\n    changes();\n  }, [props.match.params.keySorted, props.match.params.sortType]);\n  const row = props.data.map(obj => React.createElement(Row, {\n    obj: obj,\n    key: obj.Name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(TableHeader, {\n    headers: props.headers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), row);\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.profiles,\n    headers: state.keys\n  };\n};\n\nexport const TableContainer = compose(connect(mapStateToProps, {\n  directSort,\n  reversedSort\n}), withRouter)(Table);","map":{"version":3,"sources":["/home/daria/table/test-task/src/components/Table/Table.jsx"],"names":["React","useEffect","connect","withRouter","compose","directSort","reversedSort","Row","TableHeader","Table","props","changes","keySorted","match","params","sortType","undefined","row","data","map","obj","Name","headers","mapStateToProps","state","profiles","keys","TableContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,uBAAzC;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,WAASC,OAAT,GAAmB;AACjB,UAAMC,SAAS,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,SAArC;AACA,UAAMG,QAAQ,GAAGL,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,QAApC;;AACA,QAAIH,SAAS,KAAKI,SAAlB,EAA6B;AAC3B,UAAID,QAAQ,KAAK,QAAjB,EAA2B;AACzBL,QAAAA,KAAK,CAACL,UAAN,CAAiBO,SAAjB;AACD,OAFD,MAEO,IAAIG,QAAQ,KAAK,UAAjB,EAA6B;AAClCL,QAAAA,KAAK,CAACJ,YAAN,CAAmBM,SAAnB;AACD;AACF;AACF;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACD,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,SAApB,EAA+BF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,QAAlD,CAFM,CAAT;AAIA,QAAME,GAAG,GAAGP,KAAK,CAACQ,IAAN,CAAWC,GAAX,CAAeC,GAAG,IAAI,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,GAAG,EAAEA,GAAG,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEX,KAAK,CAACY,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGL,GAFH,CADF;AAMD,CAzBD;;AA2BA,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLN,IAAAA,IAAI,EAAEM,KAAK,CAACC,QADP;AAELH,IAAAA,OAAO,EAAEE,KAAK,CAACE;AAFV,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,cAAc,GAAGvB,OAAO,CACnCF,OAAO,CAACqB,eAAD,EAAkB;AAAElB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAD4B,EAEnCH,UAFmC,CAAP,CAG5BM,KAH4B,CAAvB","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { directSort, reversedSort } from '../../actions/actions';\nimport Row from './Row/Row';\nimport TableHeader from './TableHeader/TableHeader';\n\nconst Table = props => {\n  function changes() {\n    const keySorted = props.match.params.keySorted;\n    const sortType = props.match.params.sortType;\n    if (keySorted !== undefined) {\n      if (sortType === 'direct') {\n        props.directSort(keySorted);\n      } else if (sortType === 'reversed') {\n        props.reversedSort(keySorted);\n      }\n    }\n  }\n\n  useEffect(() => {\n    changes();\n  }, [props.match.params.keySorted, props.match.params.sortType]);\n\n  const row = props.data.map(obj => <Row obj={obj} key={obj.Name} />);\n\n  return (\n    <div>\n      <TableHeader headers={props.headers} />\n      {row}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.profiles,\n    headers: state.keys,\n  };\n};\n\nexport const TableContainer = compose(\n  connect(mapStateToProps, { directSort, reversedSort }),\n  withRouter\n)(Table);\n"]},"metadata":{},"sourceType":"module"}