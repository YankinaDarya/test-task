{"ast":null,"code":"var _jsxFileName = \"/home/daria/table/test-task/src/components/Table/Table.jsx\";\nimport React, { useEffect } from 'react';\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport Row from \"./Row/Row\";\nimport { directSort, reversedSort } from \"../../redux/reducer\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { compose } from \"redux\";\n\nconst Table = props => {\n  function changes() {\n    const keySorted = props.match.params.keySorted;\n    const sortType = props.match.params.sortType;\n\n    if (keySorted !== undefined) {\n      if (sortType === 'direct') {\n        props.directSort(keySorted);\n      } else if (sortType === 'reversed') {\n        props.reversedSort(keySorted);\n      }\n    }\n  }\n\n  useEffect(() => {\n    changes();\n  }, []);\n  useEffect(() => {\n    changes();\n  }, [props.match.params.keySorted, props.match.params.sortType]);\n  const row = props.data.map(obj => React.createElement(Row, {\n    obj: obj,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(TableHeader, {\n    headers: props.headers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), row);\n};\n\nlet mapStateToProps = state => {\n  return {\n    data: state.profiles,\n    headers: state.keys\n  };\n};\n\nexport const TableContainer = compose(connect(mapStateToProps, {\n  directSort,\n  reversedSort\n}), withRouter)(Table);","map":{"version":3,"sources":["/home/daria/table/test-task/src/components/Table/Table.jsx"],"names":["React","useEffect","TableHeader","Row","directSort","reversedSort","connect","withRouter","compose","Table","props","changes","keySorted","match","params","sortType","undefined","row","data","map","obj","headers","mapStateToProps","state","profiles","keys","TableContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,qBAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,WAASC,OAAT,GAAmB;AACf,UAAMC,SAAS,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,SAArC;AACA,UAAMG,QAAQ,GAAGL,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,QAApC;;AACA,QAAIH,SAAS,KAAKI,SAAlB,EAA6B;AACzB,UAAID,QAAQ,KAAK,QAAjB,EAA2B;AACvBL,QAAAA,KAAK,CAACN,UAAN,CAAiBQ,SAAjB;AACH,OAFD,MAEO,IAAIG,QAAQ,KAAK,UAAjB,EAA6B;AAChCL,QAAAA,KAAK,CAACL,YAAN,CAAmBO,SAAnB;AACH;AACJ;AACJ;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACD,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,SAApB,EAA+BF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,QAAlD,CAFM,CAAT;AAIA,QAAME,GAAG,GAAGP,KAAK,CAACQ,IAAN,CAAWC,GAAX,CAAeC,GAAG,IAAI,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAAZ;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEV,KAAK,CAACW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKJ,GAFL,CADJ;AAMH,CA9BD;;AAgCA,IAAIK,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHL,IAAAA,IAAI,EAAEK,KAAK,CAACC,QADT;AAEHH,IAAAA,OAAO,EAAEE,KAAK,CAACE;AAFZ,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,cAAc,GAAGlB,OAAO,CAACF,OAAO,CAACgB,eAAD,EAAkB;AAAClB,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAlB,CAAR,EAAuDE,UAAvD,CAAP,CAA0EE,KAA1E,CAAvB","sourcesContent":["import React, {useEffect} from 'react';\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport Row from \"./Row/Row\";\nimport {directSort, reversedSort} from \"../../redux/reducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport {compose} from \"redux\";\n\nconst Table = (props) => {\n\n    function changes() {\n        const keySorted = props.match.params.keySorted;\n        const sortType = props.match.params.sortType;\n        if (keySorted !== undefined) {\n            if (sortType === 'direct') {\n                props.directSort(keySorted);\n            } else if (sortType === 'reversed') {\n                props.reversedSort(keySorted);\n            }\n        }\n    }\n\n    useEffect(() => {\n        changes();\n    }, []);\n\n    useEffect(() => {\n        changes()\n    }, [props.match.params.keySorted, props.match.params.sortType]);\n\n    const row = props.data.map(obj => <Row obj={obj}/>);\n\n    return (\n        <div>\n            <TableHeader headers={props.headers}/>\n            {row}\n        </div>\n    );\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        data: state.profiles,\n        headers: state.keys\n    }\n};\n\nexport const TableContainer = compose(connect(mapStateToProps, {directSort, reversedSort}), withRouter)(Table);"]},"metadata":{},"sourceType":"module"}